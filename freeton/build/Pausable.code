.version sol 0.57.1

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro pause
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/utils/Pausable.sol, 31
ENDS
.loc ../contracts/utils/Pausable.sol, 0
CALLREF {
	CALL $pause_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	pause_internal
.type	pause_internal, @function
CALL $pause_internal_macro$

.macro pause_internal_macro
.loc ../contracts/utils/Ownable.sol, 8
PUSHREF {
	.blob x4f776e61626c653a206e6f74206f776e6572
}
GETGLOB 10
GETGLOB 9
SDEQ
THROWARGIFNOT 123
.loc ../contracts/utils/Pausable.sol, 16
PUSHREF {
	.blob x5061757361626c653a206e6f7420756e706175736564
}
GETGLOB 11
NOT
THROWARGIFNOT 101
.loc ../contracts/utils/Pausable.sol, 32
TRUE
SETGLOB 11
.loc ../contracts/utils/Pausable.sol, 33
PUSHREF {
	.blob xc00000000000000000000000001a441a60
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/utils/Pausable.sol, 0

.macro unpause
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/utils/Pausable.sol, 39
ENDS
.loc ../contracts/utils/Pausable.sol, 0
CALLREF {
	CALL $unpause_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	unpause_internal
.type	unpause_internal, @function
CALL $unpause_internal_macro$

.macro unpause_internal_macro
.loc ../contracts/utils/Ownable.sol, 8
PUSHREF {
	.blob x4f776e61626c653a206e6f74206f776e6572
}
GETGLOB 10
GETGLOB 9
SDEQ
THROWARGIFNOT 123
.loc ../contracts/utils/Pausable.sol, 24
PUSHREF {
	.blob x5061757361626c653a206e6f7420706175736564
}
GETGLOB 11
THROWARGIFNOT 101
.loc ../contracts/utils/Pausable.sol, 40
FALSE
SETGLOB 11
.loc ../contracts/utils/Pausable.sol, 41
PUSHREF {
	.blob xc000000000000000000000000011d865d4
}
PUSHINT 0
SENDRAWMSG
.loc ../contracts/utils/Pausable.sol, 0

.globl	_transferOwnership_internal
.type	_transferOwnership_internal, @function
CALL $_transferOwnership_internal_macro$

.macro _transferOwnership_internal_macro
.loc ../contracts/utils/Ownable.sol, 13
SETGLOB 10
.loc ../contracts/utils/Ownable.sol, 0

.macro transferOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/utils/Ownable.sol, 16
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/utils/Ownable.sol, 0
CALLREF {
	CALL $transferOwnership_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro transferOwnership_internal_macro
.loc ../contracts/utils/Ownable.sol, 8
PUSHREF {
	.blob x4f776e61626c653a206e6f74206f776e6572
}
GETGLOB 10
GETGLOB 9
SDEQ
THROWARGIFNOT 123
.loc ../contracts/utils/Ownable.sol, 17
CALLREF {
	CALL $_transferOwnership_internal_macro$
}
.loc ../contracts/utils/Ownable.sol, 0

.macro renounceOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/utils/Ownable.sol, 20
ENDS
.loc ../contracts/utils/Ownable.sol, 0
CALLREF {
	CALL $renounceOwnership_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro renounceOwnership_internal_macro
.loc ../contracts/utils/Ownable.sol, 8
PUSHREF {
	.blob x4f776e61626c653a206e6f74206f776e6572
}
GETGLOB 10
GETGLOB 9
SDEQ
THROWARGIFNOT 123
.loc ../contracts/utils/Ownable.sol, 21
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
CALLREF {
	CALL $_transferOwnership_internal_macro$
}
.loc ../contracts/utils/Ownable.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDI 1
ENDS
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	FALSE
	SETGLOB 11
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
STI 1
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro owner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000df0bcfde
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro paused
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b08d66d1
	NEWC
	STSLICE
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1594609630
LEQ
IFJMPREF {
	DUP
	PUSHINT 235197086
	EQUAL
	IFJMPREF {
		CALL $transferOwnership$
	}
	DUP
	PUSHINT 814573265
	EQUAL
	IFJMPREF {
		CALL $paused$
	}
	DUP
	PUSHINT 1105452580
	EQUAL
	IFJMPREF {
		CALL $pause$
	}
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
}
DUP
PUSHINT 1916555405
LEQ
IFJMPREF {
	DUP
	PUSHINT 1729444094
	EQUAL
	IFJMPREF {
		CALL $renounceOwnership$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1916555405
	EQUAL
	IFJMPREF {
		CALL $unpause$
	}
}

