.version sol 0.57.1

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDU 128
LDU 128
LDU 128
ENDS
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 38
ACCEPT
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 40
ROLL 7
CALLREF {
	CALL $setOwnership_internal_macro$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 42
ROLL 6
SETGLOB 12
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 43
ROLL 5
SETGLOB 13
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 44
ROLL 4
SETGLOB 14
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 45
ROLL 3
SETGLOB 15
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 46
ROT
SETGLOB 16
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 47
SWAP
SETGLOB 17
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 48
SETGLOB 18
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro trigger
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 51
LDU 128
ENDS
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $trigger_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro trigger_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 55
GETGLOB 15
SWAP
GETGLOB 12
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
SWAP
STGRAMS
PUSHSLICE x0000000000000000000000000002e461875_
STSLICER
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 62
GETGLOB 12
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
GETGLOB 14
NEWC
STSLICECONST x016493f2
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 69
GETGLOB 13
DUP
GETGLOB 16
GETGLOB 17
GETGLOB 18
TUPLE 5
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 76
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
SWAP
NEWC
STSLICECONST x0934faed
SWAP
UNTUPLE 5
REVERSE 6, 0
STSLICE
ROLLREV 4
NEWC
STSLICE
STU 128
STU 128
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 79
CALLREF {
	CALL $revokeVaultOwnership_internal_macro$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 82
CALLREF {
	CALL $revokeRootOwnership_internal_macro$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0

.macro revokeVaultOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 85
ENDS
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $revokeVaultOwnership_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	revokeVaultOwnership_internal
.type	revokeVaultOwnership_internal, @function
CALL $revokeVaultOwnership_internal_macro$

.macro revokeVaultOwnership_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 86
GETGLOB 14
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
GETGLOB 11
NEWC
STSLICECONST x0e04d29e
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0

.macro revokeRootOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 93
ENDS
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $revokeRootOwnership_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	revokeRootOwnership_internal
.type	revokeRootOwnership_internal, @function
CALL $revokeRootOwnership_internal_macro$

.macro revokeRootOwnership_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 94
NEWDICT
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 95
GETGLOB 11
DUP
GETGLOB 12
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHSLICE x405f5e100000000000000000000000000003_
STSLICER
ROLLREV 3
NEWC
STSLICECONST x1df385c6
STSLICE
ROTREV
NEWC
STSLICE
STDICT
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 102
LDREF
ENDS
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $upgrade_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 105
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
NEWC
STU 256
STSLICE
ROLLREV 7
NEWC
STSLICE
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
STREF
STU 128
STU 128
STU 128
STBREFR
STBREFR
STBREFR
ENDC
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 117
OVER
SETCODE
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 118
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 120
CALLREF {
	CALL $:onCodeUpgrade$
}
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
DROP
.loc ../contracts/upgrade-assistant/RootUpgradeAssistant.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.globl	setOwnership_internal
.type	setOwnership_internal, @function
CALL $setOwnership_internal_macro$

.macro setOwnership_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 24
GETGLOB 11
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 26
OVER
SETGLOB 11
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 28
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x6115f072
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 0

.macro transferOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 34
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 0
CALLREF {
	CALL $transferOwnership_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro transferOwnership_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 37
DUP
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SDEQ
THROWIF 1102
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 39
CALLREF {
	CALL $setOwnership_internal_macro$
}
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 0

.macro renounceOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 45
ENDS
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 0
CALLREF {
	CALL $renounceOwnership_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro renounceOwnership_internal_macro
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 15
GETGLOB 9
GETGLOB 11
SDEQ
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
}
IF
THROWIFNOT 1101
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 46
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 48
CALLREF {
	CALL $setOwnership_internal_macro$
}
.loc ../node_modules/@broxus/contracts/contracts/access/InternalOwner.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 256
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDU 128
LDU 128
LDU 128
ENDS
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 3, 0
	PUSHREF {
	}
	PUSHINT 0
	BLKPUSH 2, 0
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 256
ROLLREV 8
NEWC
STSLICE
ROLLREV 7
NEWC
STSLICE
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
STREF
STU 128
STU 128
STU 128
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro _randomNonce
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000bb53331f
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro owner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000df0bcfde
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro tunnel
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fb80d419
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro root
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b7295e20
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro vault
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008c7faac3
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro rootCode
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d7da0361
	NEWC
	STSLICE
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro vault_receive_safe_fee
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e1050678
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro vault_settings_deploy_wallet_grams
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b99cfe05
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro vault_initial_balance
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000a664127e
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 267708481
LEQ
IFJMPREF {
	DUP
	PUSHINT 20162219
	EQUAL
	IFJMPREF {
		CALL $trigger$
	}
	DUP
	PUSHINT 209693379
	EQUAL
	IFJMPREF {
		CALL $vault$
	}
	DUP
	PUSHINT 235197086
	EQUAL
	IFJMPREF {
		CALL $transferOwnership$
	}
	DUP
	PUSHINT 267708481
	EQUAL
	IFJMPREF {
		CALL $revokeVaultOwnership$
	}
}
DUP
PUSHINT 925457952
LEQ
IFJMPREF {
	DUP
	PUSHINT 388172858
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 644092542
	EQUAL
	IFJMPREF {
		CALL $vault_initial_balance$
	}
	DUP
	PUSHINT 904229631
	EQUAL
	IFJMPREF {
		CALL $revokeRootOwnership$
	}
	DUP
	PUSHINT 925457952
	EQUAL
	IFJMPREF {
		CALL $root$
	}
}
DUP
PUSHINT 1594609630
LEQ
IFJMPREF {
	DUP
	PUSHINT 966589957
	EQUAL
	IFJMPREF {
		CALL $vault_settings_deploy_wallet_grams$
	}
	DUP
	PUSHINT 995308319
	EQUAL
	IFJMPREF {
		CALL $_randomNonce$
	}
	DUP
	PUSHINT 1473905505
	EQUAL
	IFJMPREF {
		CALL $rootCode$
	}
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
}
DUP
PUSHINT 2072040473
LEQ
IFJMPREF {
	DUP
	PUSHINT 1627719288
	EQUAL
	IFJMPREF {
		CALL $vault_receive_safe_fee$
	}
	DUP
	PUSHINT 1720648598
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1729444094
	EQUAL
	IFJMPREF {
		CALL $renounceOwnership$
	}
	DUP
	PUSHINT 2072040473
	EQUAL
	IFJMPREF {
		CALL $tunnel$
	}
}

