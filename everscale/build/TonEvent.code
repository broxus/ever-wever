.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode relay
LDMSGADDR
; Decode eventDataSignature
LDREF
ENDS
;; param: relay
;; param: eventDataSignature
; constructor TonEvent
; expValue
;; fetch initData
GETGLOB 29
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETINDEX 5
SETGLOB 29
; end colValue
; expValue
; end expValue
;; get member InProcess
PUSHINT 0
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
CALLREF {
	CALL $notifyEventStatusChanged_internal_macro$
}
;; push identifier relay
PUSH S1
;; push identifier eventDataSignature
PUSH S1
CALLREF {
	CALL $confirm_internal_macro$
}
; end constructor TonEvent
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	notifyEventStatusChanged_internal
.type	notifyEventStatusChanged_internal, @function
CALL $notifyEventStatusChanged_internal_macro$

.macro notifyEventStatusChanged_internal_macro
; function notifyEventStatusChanged
CALLREF {
	CALL $getDecodedData_internal_macro$
}
BLKSWAP 5, 1
BLKSWAP 5, 1
BLKSWAP 5, 1
BLKSWAP 5, 1
BLKSWAP 5, 1
BLKSWAP 5, 1
;; decl: owner_address
;; if
;; get member value
;; push identifier owner_address
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	;; Remote call IEventNotificationReceiver.notifyTonEventStatusChanged
	;; push identifier owner_address
	DUP
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHSLICE x3989680000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x4867b01a
	;; status
	;; push identifier status
	PUSHINT 33
	GETGLOBVAR
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
BLKDROP 6
; end function notifyEventStatusChanged

.macro confirm
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode relay
LDMSGADDR
; Decode eventDataSignature
LDREF
ENDS
;; param: relay
;; param: eventDataSignature
CALLREF {
	CALL $confirm_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	confirm_internal
.type	confirm_internal, @function
CALL $confirm_internal_macro$

.macro confirm_internal_macro
;; param: relay
;; param: eventDataSignature
; modifier onlyEventConfiguration
;; get member tonEventConfiguration
;; push identifier initData
GETGLOB 29
INDEX 5
;; push identifier SENDER_NOT_EVENT_CONFIGURATION
GETGLOB 22
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; push identifier configuration
PUSH S2
SDEQ
THROWANYIFNOT
; modifier eventInProcess
;; push identifier EVENT_NOT_IN_PROGRESS
GETGLOB 21
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier status
PUSHINT 33
GETGLOBVAR
;; ==
;; get member InProcess
PUSHINT 0
EQUAL
THROWANYIFNOT
; function confirm
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier confirmRelays
	GETGLOB 30
	INDEX 0
	LESS
}
PUSHCONT {
	;; push identifier KEY_ALREADY_CONFIRMED
	GETGLOB 23
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; index
	;; push identifier i
	PUSH S1
	;; push identifier confirmRelays
	GETGLOB 30
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; push identifier relay
	PUSH S5
	SDEQ
	NOT
	THROWANYIFNOT
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch confirmRelays
GETGLOB 30
; end expValue
;; push identifier relay
PUSH S3
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSET
PAIR
; colValue
SETGLOB 30
; end colValue
; expValue
;; fetch eventDataSignatures
GETGLOB 31
; end expValue
;; push identifier eventDataSignature
PUSH S2
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETREF
PAIR
; colValue
SETGLOB 31
; end colValue
;; if
;; get member length
;; push identifier confirmRelays
GETGLOB 30
INDEX 0
;; >=
;; get member requiredConfirmations
;; push identifier initData
GETGLOB 29
INDEX 6
GEQ
PUSHCONT {
	; expValue
	; end expValue
	;; get member Confirmed
	PUSHINT 1
	; colValue
	PUSHINT 33
	SETGLOBVAR
	; end colValue
	CALLREF {
		CALL $notifyEventStatusChanged_internal_macro$
	}
	;; get member tonEventConfiguration
	;; push identifier initData
	GETGLOB 29
	INDEX 5
	CALLREF {
		CALL $transferAll_internal_macro$
	}
}
IF
;; end if
; end function confirm
; end modifier eventInProcess
DROP
; end modifier onlyEventConfiguration
DROP2

.macro reject
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode relay
LDMSGADDR
ENDS
;; param: relay
CALLREF {
	CALL $reject_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	reject_internal
.type	reject_internal, @function
CALL $reject_internal_macro$

.macro reject_internal_macro
;; param: relay
; modifier onlyEventConfiguration
;; get member tonEventConfiguration
;; push identifier initData
GETGLOB 29
INDEX 5
;; push identifier SENDER_NOT_EVENT_CONFIGURATION
GETGLOB 22
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; push identifier configuration
PUSH S2
SDEQ
THROWANYIFNOT
; modifier eventInProcess
;; push identifier EVENT_NOT_IN_PROGRESS
GETGLOB 21
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; push identifier status
PUSHINT 33
GETGLOBVAR
;; ==
;; get member InProcess
PUSHINT 0
EQUAL
THROWANYIFNOT
; function reject
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier rejectRelays
	PUSHINT 32
	GETGLOBVAR
	INDEX 0
	LESS
}
PUSHCONT {
	;; push identifier KEY_ALREADY_REJECTED
	GETGLOB 24
	DUP
	LESSINT 2
	PUSHCONT {
		DROP
		PUSHINT 100
	}
	IF
	;; index
	;; push identifier i
	PUSH S1
	;; push identifier rejectRelays
	PUSHINT 32
	GETGLOBVAR
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; push identifier relay
	PUSH S4
	SDEQ
	NOT
	THROWANYIFNOT
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch rejectRelays
PUSHINT 32
GETGLOBVAR
; end expValue
;; push identifier relay
PUSH S2
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSET
PAIR
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
;; if
;; get member length
;; push identifier rejectRelays
PUSHINT 32
GETGLOBVAR
INDEX 0
;; >=
;; get member requiredRejects
;; push identifier initData
GETGLOB 29
INDEX 7
GEQ
PUSHCONT {
	; expValue
	; end expValue
	;; get member Rejected
	PUSHINT 2
	; colValue
	PUSHINT 33
	SETGLOBVAR
	; end colValue
	CALLREF {
		CALL $notifyEventStatusChanged_internal_macro$
	}
	;; get member tonEventConfiguration
	;; push identifier initData
	GETGLOB 29
	INDEX 5
	CALLREF {
		CALL $transferAll_internal_macro$
	}
}
IF
;; end if
; end function reject
; end modifier eventInProcess
DROP
; end modifier onlyEventConfiguration
DROP

.macro getDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getDetails_internal_macro$
}
;; emitting 5 value(s)
PUSH S5
EQINT -1
PUSHCONT {
	PUSH S7
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xbe9c116d
	PUSH S6
	UNTUPLE 9
	BLKSWAP 1, 9
	PUSH S9
	STUR 256
	PUSH S8
	STUR 64
	PUSH S7
	STUR 32
	PUSH S6
	STUR 32
	PUSH S5
	STREFR
	PUSH S4
	STSLICER
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STREFR
	BLKDROP2 9, 1
	PUSH S5
	STUR 8
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	NEWC
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 5
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
CALL $getDetails_internal_macro$

.macro getDetails_internal_macro
;; ret param: _initData
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
NEWC
ENDC
TUPLE 9
;; ret param: _status
PUSHINT 0
;; ret param: _confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: _rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: _eventDataSignatures
PUSHINT 0
NEWDICT
PAIR
; function getDetails
;; return
;; push identifier initData
GETGLOB 29
;; push identifier status
PUSHINT 33
GETGLOBVAR
;; push identifier confirmRelays
GETGLOB 30
;; push identifier rejectRelays
PUSHINT 32
GETGLOBVAR
;; push identifier eventDataSignatures
GETGLOB 31
BLKDROP2 5, 5
; end function getDetails

.macro getDecodedData
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getDecodedData_internal_macro$
}
;; emitting 6 value(s)
PUSH S6
EQINT -1
PUSHCONT {
	PUSH S8
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xb82495d3
	PUSH S7
	STSLICER
	PUSH S6
	STIR 8
	PUSH S5
	STUR 256
	PUSH S4
	STUR 128
	PUSH S3
	STUR 160
	NEWC
	PUSH S3
	STSLICER
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 6
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDecodedData_internal
.type	getDecodedData_internal, @function
CALL $getDecodedData_internal_macro$

.macro getDecodedData_internal_macro
;; ret param: rootToken
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: wid
PUSHINT 0
;; ret param: addr
PUSHINT 0
;; ret param: tokens
PUSHINT 0
;; ret param: ethereum_address
PUSHINT 0
;; ret param: owner_address
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getDecodedData
;; get member configurationMeta
;; push identifier initData
GETGLOB 29
INDEX 8
CALLREF {
	CALL $decodeConfigurationMeta_internal_macro$
}
; expValue
; end expValue
; colValue
POP S6
; end colValue
;; get member eventData
;; push identifier initData
GETGLOB 29
INDEX 4
CALLREF {
	CALL $decodeTonEventData_internal_macro$
}
REVERSE 4, 0
; expValue
; end expValue
; colValue
POP S8
; end colValue
; expValue
; end expValue
; colValue
POP S6
; end colValue
; expValue
; end expValue
; colValue
POP S4
; end colValue
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; address.makeAddrStd()
;; push identifier addr
PUSH S3
;; push identifier wid
PUSH S5
NEWC
STSLICECONST x9_
STI 8
STU 256
; expValue
; end expValue
; colValue
ENDC
CTOS
NIP
; end colValue
; end function getDecodedData

.macro encodeEthereumEventData
DROP
; Decode input parameters
; Decode tokens
LDU 128
; Decode wid
LDI 8
; Decode owner_addr
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode owner_pubkey
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: tokens
;; param: wid
;; param: owner_addr
;; param: owner_pubkey
CALLREF {
	CALL $encodeEthereumEventData_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa14ea6cf
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	encodeEthereumEventData_internal
.type	encodeEthereumEventData_internal, @function
CALL $encodeEthereumEventData_internal_macro$

.macro encodeEthereumEventData_internal_macro
;; param: tokens
;; param: wid
;; param: owner_addr
;; param: owner_pubkey
;; ret param: data
NEWC
ENDC
; function encodeEthereumEventData
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier tokens
PUSH S6
STUR 128
;; push identifier wid
PUSH S5
STIR 8
;; push identifier owner_addr
PUSH S4
STUR 256
;; push identifier owner_pubkey
PUSH S3
STUR 256
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
DROP
; end function encodeEthereumEventData
BLKDROP2 4, 1

.macro decodeEthereumEventData
DROP
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
CALLREF {
	CALL $decodeEthereumEventData_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x8e5d1e02
	PUSH S5
	STUR 128
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 256
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	decodeEthereumEventData_internal
.type	decodeEthereumEventData_internal, @function
CALL $decodeEthereumEventData_internal_macro$

.macro decodeEthereumEventData_internal_macro
;; param: data
;; ret param: tokens
PUSHINT 0
;; ret param: wid
PUSHINT 0
;; ret param: owner_addr
PUSHINT 0
;; ret param: owner_pubkey
PUSHINT 0
; function decodeEthereumEventData
;; push identifier data
PUSH S4
CTOS
LDU 128
LDI 8
LDU 256
LDU 256
; colValue
DROP
REVERSE 4, 0
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
; end function decodeEthereumEventData
BLKDROP2 1, 4

.macro encodeConfigurationMeta
DROP
; Decode input parameters
; Decode rootToken
LDMSGADDR
ENDS
;; param: rootToken
CALLREF {
	CALL $encodeConfigurationMeta_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x85315ebd
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	encodeConfigurationMeta_internal
.type	encodeConfigurationMeta_internal, @function
CALL $encodeConfigurationMeta_internal_macro$

.macro encodeConfigurationMeta_internal_macro
;; param: rootToken
;; ret param: data
NEWC
ENDC
; function encodeConfigurationMeta
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier rootToken
PUSH S3
STSLICER
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
; expValue
; end expValue
; colValue
POP S2
; end colValue
DROP
; end function encodeConfigurationMeta
NIP

.macro decodeConfigurationMeta
DROP
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
CALLREF {
	CALL $decodeConfigurationMeta_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa42a80c7
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	decodeConfigurationMeta_internal
.type	decodeConfigurationMeta_internal, @function
CALL $decodeConfigurationMeta_internal_macro$

.macro decodeConfigurationMeta_internal_macro
;; param: data
;; ret param: rootToken
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function decodeConfigurationMeta
;; push identifier data
PUSH S1
CTOS
;; decode address
LDMSGADDR
; colValue
DROP
; expValue
; end expValue
; colValue
NIP
; end colValue
; end function decodeConfigurationMeta
NIP

.macro encodeTonEventData
DROP
; Decode input parameters
; Decode wid
LDI 8
; Decode addr
LDU 256
; Decode tokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode ethereum_address
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
ENDS
;; param: wid
;; param: addr
;; param: tokens
;; param: ethereum_address
CALLREF {
	CALL $encodeTonEventData_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x922836c3
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	encodeTonEventData_internal
.type	encodeTonEventData_internal, @function
CALL $encodeTonEventData_internal_macro$

.macro encodeTonEventData_internal_macro
;; param: wid
;; param: addr
;; param: tokens
;; param: ethereum_address
;; ret param: data
NEWC
ENDC
; function encodeTonEventData
NEWC
;; decl: builder
PUSHINT 0
;; decl: zero_event_id
; expValue
PUSH S1
; end expValue
;; push identifier zero_event_id
PUSH S1
STUR 32
;; push identifier wid
PUSH S7
STIR 8
;; push identifier addr
PUSH S6
STUR 256
;; push identifier tokens
PUSH S5
STUR 128
;; push identifier ethereum_address
PUSH S4
STUR 160
; colValue
POP S2
; end colValue
;; push identifier builder
PUSH S1
ENDC
; expValue
; end expValue
; colValue
POP S3
; end colValue
DROP2
; end function encodeTonEventData
BLKDROP2 4, 1

.macro decodeTonEventData
DROP
; Decode input parameters
; Decode data
;; decode TvmCell
LDREF
ENDS
;; param: data
CALLREF {
	CALL $decodeTonEventData_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd152101a
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 128
	PUSH S1
	STUR 160
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	decodeTonEventData_internal
.type	decodeTonEventData_internal, @function
CALL $decodeTonEventData_internal_macro$

.macro decodeTonEventData_internal_macro
;; param: data
;; ret param: wid
PUSHINT 0
;; ret param: addr
PUSHINT 0
;; ret param: tokens
PUSHINT 0
;; ret param: ethereum_address
PUSHINT 0
; function decodeTonEventData
;; push identifier data
PUSH S4
CTOS
LDU 32
LDI 8
LDU 256
LDU 128
LDU 160
; colValue
DROP
REVERSE 5, 0
DROP
; expValue
; end expValue
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
; end function decodeTonEventData
BLKDROP2 1, 4

.globl	transferAll_internal
.type	transferAll_internal, @function
CALL $transferAll_internal_macro$

.macro transferAll_internal_macro
;; param: receiver
; function transferAll
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 129
SENDRAWMSG
; end function transferAll
DROP

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
GETGLOB 28
GETGLOB 29
GETGLOB 30
UNTUPLE 2
GETGLOB 31
UNTUPLE 2
PUSHINT 33
GETGLOBVAR
PUSHINT 32
GETGLOBVAR
UNTUPLE 2
PUSHINT 28
PUSHINT 0
REVX
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
SWAP
UNTUPLE 9
NEWC
PUSH S9
STUR 256
PUSH S8
STUR 64
PUSH S7
STUR 32
PUSH S6
STUR 32
PUSH S5
STREFR
PUSH S4
STSLICER
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STREFR
BLKDROP2 9, 1
STBREFR
STU 32
STDICT
STU 32
STDICT
STU 8
STU 32
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDREFRTOS
LDU 256
LDU 64
LDU 32
LDU 32
LDREF
LDMSGADDR
LDU 16
LDU 16
PLDREF
TUPLE 9
SETGLOB 29
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 30
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 31
LDU 8
LDU 32
PLDDICT
PAIR
PUSHINT 32
SETGLOBVAR
PUSHINT 33
SETGLOBVAR
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDREFRTOS
	LDU 256
	LDU 64
	LDU 32
	LDU 32
	LDREF
	LDMSGADDR
	LDU 16
	LDU 16
	PLDREF
	TUPLE 9
	SETGLOB 29
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 30
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 31
	LDU 8
	LDU 32
	PLDDICT
	PAIR
	PUSHINT 32
	SETGLOBVAR
	PUSHINT 33
	SETGLOBVAR
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init ADDRESS_IS_NOT_OWNER
	PUSHINT 0
	SETGLOB 10
	; init BRIDGE_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 11
	; init EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 12
	; init KEYS_DIFFERENT_SHAPE
	PUSHINT 0
	SETGLOB 13
	; init EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 0
	SETGLOB 14
	; init EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 15
	; init EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 0
	SETGLOB 16
	; init EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 17
	; init SENDER_NOT_BRIDGE
	PUSHINT 0
	SETGLOB 18
	; init EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 0
	SETGLOB 19
	; init EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 0
	SETGLOB 20
	; init EVENT_NOT_IN_PROGRESS
	PUSHINT 0
	SETGLOB 21
	; init SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 0
	SETGLOB 22
	; init KEY_ALREADY_CONFIRMED
	PUSHINT 0
	SETGLOB 23
	; init KEY_ALREADY_REJECTED
	PUSHINT 0
	SETGLOB 24
	; init EVENT_NOT_CONFIRMED
	PUSHINT 0
	SETGLOB 25
	; init TOO_LOW_MSG_VALUE
	PUSHINT 0
	SETGLOB 26
	; init WRONG_TVM_KEY
	PUSHINT 0
	SETGLOB 27
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 28
	; init initData
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		LDU 256
		LDU 64
		LDU 32
		LDU 32
		LDREF
		LDMSGADDR
		LDU 16
		LDU 16
		PLDREF
		TUPLE 9
	}
	PUSHCONT {
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		NEWC
		ENDC
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		PUSHINT 0
		NEWC
		ENDC
		TUPLE 9
	}
	IFELSE
	SETGLOB 29
	; init confirmRelays
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 30
	; init eventDataSignatures
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 31
	; init rejectRelays
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 32
	SETGLOBVAR
	; init status
	PUSHINT 0
	PUSHINT 33
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: ADDRESS_IS_NOT_OWNER
	PUSHINT 5001
	SETGLOB 10
	;; init state var: BRIDGE_NOT_ACTIVE
	PUSHINT 5002
	SETGLOB 11
	;; init state var: EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 5003
	SETGLOB 12
	;; init state var: KEYS_DIFFERENT_SHAPE
	PUSHINT 5004
	SETGLOB 13
	;; init state var: EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 5005
	SETGLOB 14
	;; init state var: EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 5006
	SETGLOB 15
	;; init state var: EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 5007
	SETGLOB 16
	;; init state var: EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 5008
	SETGLOB 17
	;; init state var: SENDER_NOT_BRIDGE
	PUSHINT 5101
	SETGLOB 18
	;; init state var: EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 5102
	SETGLOB 19
	;; init state var: EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 5103
	SETGLOB 20
	;; init state var: EVENT_NOT_IN_PROGRESS
	PUSHINT 5201
	SETGLOB 21
	;; init state var: SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 5202
	SETGLOB 22
	;; init state var: KEY_ALREADY_CONFIRMED
	PUSHINT 5203
	SETGLOB 23
	;; init state var: KEY_ALREADY_REJECTED
	PUSHINT 5204
	SETGLOB 24
	;; init state var: EVENT_NOT_CONFIRMED
	PUSHINT 5205
	SETGLOB 25
	;; init state var: TOO_LOW_MSG_VALUE
	PUSHINT 5206
	SETGLOB 26
	;; init state var: WRONG_TVM_KEY
	PUSHINT 5301
	SETGLOB 27
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 304625347
LEQ
PUSHCONT {
	DUP
	PUSHINT 87121597
	EQUAL
	IFJMPREF {
		CALL $encodeConfigurationMeta$
	}
	DUP
	PUSHINT 240983554
	EQUAL
	IFJMPREF {
		CALL $decodeEthereumEventData$
	}
	DUP
	PUSHINT 304625347
	EQUAL
	IFJMPREF {
		CALL $encodeTonEventData$
	}
}
IFJMP
DUP
PUSHINT 606765255
LEQ
PUSHCONT {
	DUP
	PUSHINT 554475629
	EQUAL
	IFJMPREF {
		CALL $confirm$
	}
	DUP
	PUSHINT 558802639
	EQUAL
	IFJMPREF {
		CALL $encodeEthereumEventData$
	}
	DUP
	PUSHINT 606765255
	EQUAL
	IFJMPREF {
		CALL $decodeConfigurationMeta$
	}
}
IFJMP
DUP
PUSHINT 1050415469
LEQ
PUSHCONT {
	DUP
	PUSHINT 941921747
	EQUAL
	IFJMPREF {
		CALL $getDecodedData$
	}
	DUP
	PUSHINT 1047874239
	EQUAL
	IFJMPREF {
		CALL $reject$
	}
	DUP
	PUSHINT 1050415469
	EQUAL
	IFJMPREF {
		CALL $getDetails$
	}
}
IFJMP
DUP
PUSHINT 1439650788
LEQ
PUSHCONT {
	DUP
	PUSHINT 1364332570
	EQUAL
	IFJMPREF {
		CALL $decodeTonEventData$
	}
	DUP
	PUSHINT 1439650788
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
IFJMP
